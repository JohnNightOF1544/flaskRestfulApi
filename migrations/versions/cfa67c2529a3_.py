"""empty message

Revision ID: cfa67c2529a3
Revises: 2c37313e24e0
Create Date: 2021-07-21 02:41:56.411158

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'cfa67c2529a3'
down_revision = '2c37313e24e0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('Email', table_name='person')
    op.drop_index('PublicId', table_name='person')
    op.drop_table('person')
    op.drop_table('type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('type',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('Name', mysql.VARCHAR(collation='utf8_unicode_ci', length=100), nullable=True),
    sa.Column('Description', mysql.VARCHAR(collation='utf8_unicode_ci', length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_table('person',
    sa.Column('id', mysql.INTEGER(display_width=11), autoincrement=True, nullable=False),
    sa.Column('PublicId', mysql.VARCHAR(collation='utf8_unicode_ci', length=100), nullable=True),
    sa.Column('FullName', mysql.VARCHAR(collation='utf8_unicode_ci', length=100), nullable=False),
    sa.Column('Email', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('StudentId', mysql.VARCHAR(collation='utf8_unicode_ci', length=100), nullable=False),
    sa.Column('Password', mysql.VARCHAR(collation='utf8_unicode_ci', length=200), nullable=False),
    sa.Column('Type_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['Type_id'], ['type.id'], name='person_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8_unicode_ci',
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('PublicId', 'person', ['PublicId'], unique=True)
    op.create_index('Email', 'person', ['Email'], unique=True)
    # ### end Alembic commands ###
